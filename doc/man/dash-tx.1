.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH DASH-TX "1" "August 2024" "dash-tx v21.1.0" "User Commands"
.SH NAME
dash-tx \- manual page for dash-tx v21.1.0
.SH SYNOPSIS
.B dash-tx
[\fI\,options\/\fR] \fI\,<hex-tx> \/\fR[\fI\,commands\/\fR]  \fI\,Update hex-encoded dash transaction\/\fR
.br
.B dash-tx
[\fI\,options\/\fR] \fI\,-create \/\fR[\fI\,commands\/\fR]   \fI\,Create hex-encoded dash transaction\/\fR
.SH DESCRIPTION
Dash Core dash\-tx utility version v21.1.0
.SH OPTIONS
.HP
\-?
.IP
Print this help message and exit
.HP
\fB\-create\fR
.IP
Create new, empty TX.
.HP
\fB\-json\fR
.IP
Select JSON output
.HP
\fB\-txid\fR
.IP
Output only the hex\-encoded transaction id of the resultant transaction.
.HP
\fB\-version\fR
.IP
Print version and exit
.PP
Chain selection options:
.HP
\fB\-chain=\fR<chain>
.IP
Use the chain <chain> (default: main). Allowed values: main, test,
regtest
.HP
\fB\-devnet=\fR<name>
.IP
Use devnet chain with provided name
.HP
\fB\-highsubsidyblocks=\fR<n>
.IP
The number of blocks with a higher than normal subsidy to mine at the
start of a chain. Block after that height will have fixed subsidy
base. (default: 0, devnet\-only)
.HP
\fB\-highsubsidyfactor=\fR<n>
.IP
The factor to multiply the normal block subsidy by while in the
highsubsidyblocks window of a chain (default: 1, devnet\-only)
.HP
\fB\-llmqchainlocks=\fR<quorum name>
.IP
Override the default LLMQ type used for ChainLocks. Allows using
ChainLocks with smaller LLMQs. (default: llmq_devnet,
devnet\-only)
.HP
\fB\-llmqdevnetparams=\fR<size>:<threshold>
.IP
Override the default LLMQ size for the LLMQ_DEVNET quorum (devnet\-only)
.HP
\fB\-llmqinstantsenddip0024=\fR<quorum name>
.IP
Override the default LLMQ type used for InstantSendDIP0024. (default:
llmq_devnet_dip0024, devnet\-only)
.HP
\fB\-llmqmnhf=\fR<quorum name>
.IP
Override the default LLMQ type used for EHF. (default: llmq_devnet,
devnet\-only)
.HP
\fB\-llmqplatform=\fR<quorum name>
.IP
Override the default LLMQ type used for Platform. (default:
llmq_devnet_platform, devnet\-only)
.HP
\fB\-minimumdifficultyblocks=\fR<n>
.IP
The number of blocks that can be mined with the minimum difficulty at
the start of a chain (default: 0, devnet\-only)
.HP
\fB\-powtargetspacing=\fR<n>
.IP
Override the default PowTargetSpacing value in seconds (default: 2.5
minutes, devnet\-only)
.HP
\fB\-testnet\fR
.IP
Use the test chain. Equivalent to \fB\-chain\fR=\fI\,test\/\fR
.PP
Commands:
.IP
delin=N
.IP
Delete input N from TX
.IP
delout=N
.IP
Delete output N from TX
.IP
in=TXID:VOUT(:SEQUENCE_NUMBER)
.IP
Add input to TX
.IP
locktime=N
.IP
Set TX lock time to N
.IP
nversion=N
.IP
Set TX version to N
.IP
outaddr=VALUE:ADDRESS
.IP
Add address\-based output to TX
.IP
outdata=[VALUE:]DATA
.IP
Add data\-based output to TX
.IP
outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]
.IP
Add Pay To n\-of\-m Multi\-sig output to TX. n = REQUIRED, m = PUBKEYS.
Optionally add the "S" flag to wrap the output in a
pay\-to\-script\-hash.
.IP
outpubkey=VALUE:PUBKEY[:FLAGS]
.IP
Add pay\-to\-pubkey output to TX. Optionally add the "S" flag to wrap the
output in a pay\-to\-script\-hash.
.IP
outscript=VALUE:SCRIPT[:FLAGS]
.IP
Add raw script output to TX. Optionally add the "S" flag to wrap the
output in a pay\-to\-script\-hash.
.IP
sign=SIGHASH\-FLAGS
.IP
Add zero or more signatures to transaction. This command requires JSON
registers:prevtxs=JSON object, privatekeys=JSON object. See
signrawtransactionwithkey docs for format of sighash flags, JSON
objects.
.PP
Register Commands:
.IP
load=NAME:FILENAME
.IP
Load JSON file FILENAME into register NAME
.IP
set=NAME:JSON\-STRING
.IP
Set register NAME to given JSON\-STRING
